
matrix
http://www.stathome.cn/manual/s/03.html


read a matrix
x=read.table(featureX)
can be delimited by '\t' or ' '


write a matrix
write.table(b,'temp',row.names=FALSE,col.names=FALSE,quote=FALSE,sep='\t')



subset(a,a[,1]>3,select=1:2)
only available to columns, after getting the rows, then select some columns from the rows


string match
a %in% b	exact match
grepl		some characters can't be matched: "$", it should be grepl('\\$',a) instead of grepl('$',a)
pmatch		prefix



R for MATLAB users
http://mathesaurus.sourceforge.net/octave-r.html


pca
http://stat.ethz.ch/R-manual/R-patched/library/stats/html/princomp.html


t-test
m=t.test(e,conf.level=0.99)
confident interval: m$conf.int[1] m$conf.int[2]


# t-test using the limma package:
library(limma)
design = cbind(Cell_A = c(1,1,1,0,0,0,0,0,0), # First 3 columns->Cell_A
               Cell_B = c(0,0,0,1,1,1,0,0,0),
               Cell_C = c(0,0,0,0,0,0,1,1,1)) # Last 3 columns->Cell_C
fit = lmFit(data2, design=design) # Fit the original matrix to the above design.
# We want to compare A vs. B, A vs. C and B vs. C
contrastsMatrix = makeContrasts("Cell_A-Cell_B","Cell_A-Cell_C","Cell_B-Cell_C",levels = design) 
fit2 = contrasts.fit(fit, contrasts = contrastsMatrix) # Making the comparisons.
fit2 = eBayes(fit2) # Moderating the t-tetst by eBayes method.

formula: ~
http://site.douban.com/182577/widget/notes/10567181/note/318916395/
response ~ explanatory
